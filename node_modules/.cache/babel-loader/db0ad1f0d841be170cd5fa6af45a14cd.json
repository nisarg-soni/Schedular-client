{"ast":null,"code":"var _jsxFileName = \"/home/nisarg/Desktop/ror/testone/client/src/components/Interview.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getInterview, getParticipants, postModifyInterview, deleteInterview } from \"../api\";\nimport Notifier, { openSnackbar } from \"./Notifier\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles, TextField, Button, Container, CircularProgress, Fab } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\"; // import {\n//   EditIcon,\n//   DeleteIcon\n// } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    },\n    marginTop: theme.spacing(3)\n  },\n  timeField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  textField: {\n    width: \"100%\"\n  },\n  fabContainer: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\"\n  },\n  fab: {\n    margin: \"0.3rem\"\n  }\n}));\nexport default function Interview({\n  id\n}) {\n  const [interview, setInterview] = useState(null);\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [candOpt, setCandOpt] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [interOpt, setInterOpt] = useState([]);\n  const [interviewers, setInterviewers] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [disable, setDisable] = useState(true);\n  useEffect(() => {\n    console.log(id);\n    getInterview(id).then(interview => {\n      setInterview(interview);\n      setName(interview.name);\n      setDescription(interview.description);\n      setCandidates(interview.candidates);\n      setInterviewers(interview.interviewers);\n      setDate(interview.date);\n      let start = new Date(interview.start_time);\n      let end = new Date(interview.end_time);\n      start = start.toLocaleTimeString();\n      end = end.toLocaleTimeString();\n      if (start[1] === \":\") start = \"0\" + start;\n      if (end[1] === \":\") end = \"0\" + end;\n      setStartTime(start.slice(0, 5));\n      setEndTime(end.slice(0, 5));\n    });\n  }, [id]);\n  if (!interview) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }\n  });\n\n  async function updateCandOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setCandOpt(await getParticipants({\n      query: value.toLowerCase(),\n      role: 1\n    }));\n  }\n\n  async function updateInterOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setInterOpt(await getParticipants({\n      query: value.toLowerCase(),\n      role: 0\n    }));\n  }\n\n  const nameField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"name\",\n    label: \"Name\",\n    className: classes.textField,\n    onChange: event => setName(event.target.value),\n    value: name,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  });\n  const descriptionField = /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"Description\",\n    className: classes.textField,\n    multiline: true,\n    rows: 4,\n    onChange: event => setDescription(event.target.value),\n    value: description,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  });\n  const candidateField = /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    filterSelectedOptions: true,\n    id: \"candidates\",\n    size: \"small\",\n    options: candOpt,\n    getOptionLabel: option => option.name,\n    getOptionSelected: (option, value) => option.id === value.id,\n    onInputChange: updateCandOpts,\n    onChange: (evt, value) => setCandidates(value),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"standard\",\n      label: \"Select Candidates\",\n      placeholder: \"candidates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    })),\n    value: candidates,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  });\n  const interviewerField = /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    filterSelectedOptions: true,\n    id: \"interviewer\",\n    size: \"small\",\n    options: interOpt,\n    getOptionLabel: option => option.name,\n    getOptionSelected: (option, value) => option.id === value.id,\n    onInputChange: updateInterOpts,\n    onChange: (evt, value) => setInterviewers(value),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"standard\",\n      label: \"Select Interviewers\",\n      placeholder: \"Interviewers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    })),\n    value: interviewers,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  });\n  const dateField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setDate(event.target.value),\n    value: date,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  });\n  const startTimeField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"start-time\",\n    label: \"Start Time\",\n    type: \"time\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setStartTime(event.target.value),\n    value: startTime,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  });\n  const endTimeField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"end-time\",\n    label: \"End Time\",\n    type: \"time\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setEndTime(event.target.value),\n    value: endTime,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  });\n\n  async function formSubmit(event) {\n    event.preventDefault(); // use start_time.toISOString() to convert to the required format\n\n    const start_time = new Date(date + \" \" + startTime);\n    const end_time = new Date(date + \" \" + endTime);\n    const start_str = `${start_time.getUTCHours() < 10 ? \"0\" + start_time.getUTCHours() : String(start_time.getUTCHours())}:${start_time.getUTCMinutes() < 10 ? \"0\" + start_time.getUTCMinutes() : String(start_time.getUTCMinutes())}`;\n    const end_str = `${end_time.getUTCHours() < 10 ? \"0\" + end_time.getUTCHours() : String(end_time.getUTCHours())}:${end_time.getUTCMinutes() < 10 ? \"0\" + end_time.getUTCMinutes() : String(end_time.getUTCMinutes())}`;\n\n    if (!interviewers.length) {\n      // console.log('Interviewer is empty');\n      openSnackbar({\n        message: \"Interviewer is empty\"\n      });\n    } else if (!candidates.length) {\n      // console.log('Candidates is empty');\n      openSnackbar({\n        message: \"Candidates is empty\"\n      });\n    } else if (end_time.getTime() <= start_time.getTime()) {\n      // console.log('Start time can not be later than end time. Make Snack bar.');\n      openSnackbar({\n        message: \"Interview can not start after it ends.\"\n      });\n    } else {\n      const inter = interviewers.map(one => {\n        return one.id;\n      });\n      const candid = candidates.map(one => {\n        return one.id;\n      });\n      const details = {\n        id,\n        name,\n        description,\n        date,\n        start: start_str,\n        end: end_str,\n        interviewers: inter,\n        candidates: candid\n      };\n      let result;\n\n      try {\n        result = await postModifyInterview(details);\n      } catch (error) {\n        console.log(error);\n      } // console.log(result);\n\n\n      if (result.status === \"SUCCESS\") {\n        openSnackbar({\n          message: \"Successful, redirecting to Home...\"\n        }); //redirect to home.\n\n        console.log(\"Now load home screen.\");\n        setTimeout(() => {\n          window.location = \"/\";\n        }, 1000);\n      } else {\n        // console.log('Overlap occured, so make snackbar and load the same form.');\n        openSnackbar({\n          message: \"Interview is overlapping with a previous interview.\"\n        });\n      }\n    }\n  }\n\n  async function onDelete() {\n    let result = await deleteInterview(id);\n\n    if (result.status === \"SUCCESS\") {\n      openSnackbar({\n        message: \"Deleted, redirecting to Home...\"\n      }); //redirect to home.\n\n      console.log(\"Now load home screen.\");\n      setTimeout(() => {\n        window.location = \"/\";\n      }, 1000);\n    } else {\n      console.log(result); // console.log('Overlap occured, so make snackbar and load the same form.');\n\n      openSnackbar({\n        message: \"There was some error while deleting\"\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Notifier, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.input,\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, nameField, descriptionField, candidateField, interviewerField, dateField, startTimeField, endTimeField, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: disable,\n    style: {\n      maxWidth: \"8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    onClick: () => setDisable(!disable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/nisarg/Desktop/ror/testone/client/src/components/Interview.js"],"names":["React","useState","useEffect","getInterview","getParticipants","postModifyInterview","deleteInterview","Notifier","openSnackbar","Autocomplete","makeStyles","TextField","Button","Container","CircularProgress","Fab","MuiThemeProvider","EditIcon","DeleteIcon","useStyles","theme","input","display","flexDirection","width","marginTop","spacing","timeField","marginLeft","marginRight","textField","fabContainer","margin","top","right","bottom","left","position","fab","Interview","id","interview","setInterview","classes","name","setName","description","setDescription","candOpt","setCandOpt","candidates","setCandidates","interOpt","setInterOpt","interviewers","setInterviewers","date","setDate","startTime","setStartTime","endTime","setEndTime","disable","setDisable","console","log","then","start","Date","start_time","end","end_time","toLocaleTimeString","slice","updateCandOpts","event","value","reason","length","query","toLowerCase","role","updateInterOpts","nameField","target","descriptionField","candidateField","option","evt","params","interviewerField","dateField","shrink","startTimeField","endTimeField","formSubmit","preventDefault","start_str","getUTCHours","String","getUTCMinutes","end_str","message","getTime","inter","map","one","candid","details","result","error","status","setTimeout","window","location","onDelete","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  getInterview,\n  getParticipants,\n  postModifyInterview,\n  deleteInterview,\n} from \"../api\";\nimport Notifier, { openSnackbar } from \"./Notifier\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  makeStyles,\n  TextField,\n  Button,\n  Container,\n  CircularProgress,\n  Fab,\n} from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"material-ui/styles\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n// import {\n//   EditIcon,\n//   DeleteIcon\n// } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    marginTop: theme.spacing(3),\n  },\n  timeField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  textField: {\n    width: \"100%\",\n  },\n  fabContainer: {\n    margin: 0,\n    top: \"auto\",\n    right: 20,\n    bottom: 20,\n    left: \"auto\",\n    position: \"fixed\",\n  },\n  fab: {\n    margin: \"0.3rem\",\n  },\n}));\n\nexport default function Interview({ id }) {\n  const [interview, setInterview] = useState(null);\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [candOpt, setCandOpt] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [interOpt, setInterOpt] = useState([]);\n  const [interviewers, setInterviewers] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [disable, setDisable] = useState(true);\n\n  useEffect(() => {\n    console.log(id);\n    getInterview(id).then((interview) => {\n      setInterview(interview);\n      setName(interview.name);\n      setDescription(interview.description);\n      setCandidates(interview.candidates);\n      setInterviewers(interview.interviewers);\n      setDate(interview.date);\n      let start = new Date(interview.start_time);\n      let end = new Date(interview.end_time);\n      start = start.toLocaleTimeString();\n      end = end.toLocaleTimeString();\n      if (start[1] === \":\") start = \"0\" + start;\n      if (end[1] === \":\") end = \"0\" + end;\n      setStartTime(start.slice(0, 5));\n      setEndTime(end.slice(0, 5));\n    });\n  }, [id]);\n  if (!interview) return <CircularProgress />;\n\n  async function updateCandOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setCandOpt(await getParticipants({ query: value.toLowerCase(), role: 1 }));\n  }\n\n  async function updateInterOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setInterOpt(await getParticipants({ query: value.toLowerCase(), role: 0 }));\n  }\n\n  const nameField = (\n    <TextField\n      required\n      id=\"name\"\n      label=\"Name\"\n      className={classes.textField}\n      onChange={(event) => setName(event.target.value)}\n      value={name}\n      disabled={disable}\n    />\n  );\n\n  const descriptionField = (\n    <TextField\n      id=\"description\"\n      label=\"Description\"\n      className={classes.textField}\n      multiline\n      rows={4}\n      onChange={(event) => setDescription(event.target.value)}\n      value={description}\n      disabled={disable}\n    />\n  );\n\n  const candidateField = (\n    <Autocomplete\n      multiple\n      filterSelectedOptions\n      id=\"candidates\"\n      size=\"small\"\n      options={candOpt}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option, value) => option.id === value.id}\n      onInputChange={updateCandOpts}\n      onChange={(evt, value) => setCandidates(value)}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"standard\"\n          label=\"Select Candidates\"\n          placeholder=\"candidates\"\n        />\n      )}\n      value={candidates}\n      disabled={disable}\n    />\n  );\n\n  const interviewerField = (\n    <Autocomplete\n      multiple\n      filterSelectedOptions\n      id=\"interviewer\"\n      size=\"small\"\n      options={interOpt}\n      getOptionLabel={(option) => option.name}\n      getOptionSelected={(option, value) => option.id === value.id}\n      onInputChange={updateInterOpts}\n      onChange={(evt, value) => setInterviewers(value)}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          variant=\"standard\"\n          label=\"Select Interviewers\"\n          placeholder=\"Interviewers\"\n        />\n      )}\n      value={interviewers}\n      disabled={disable}\n    />\n  );\n\n  const dateField = (\n    <TextField\n      required\n      id=\"date\"\n      label=\"Date\"\n      type=\"date\"\n      className={classes.timeField}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      onChange={(event) => setDate(event.target.value)}\n      value={date}\n      disabled={disable}\n    />\n  );\n\n  const startTimeField = (\n    <TextField\n      required\n      id=\"start-time\"\n      label=\"Start Time\"\n      type=\"time\"\n      className={classes.timeField}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      onChange={(event) => setStartTime(event.target.value)}\n      value={startTime}\n      disabled={disable}\n    />\n  );\n\n  const endTimeField = (\n    <TextField\n      required\n      id=\"end-time\"\n      label=\"End Time\"\n      type=\"time\"\n      className={classes.timeField}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      onChange={(event) => setEndTime(event.target.value)}\n      value={endTime}\n      disabled={disable}\n    />\n  );\n\n  async function formSubmit(event) {\n    event.preventDefault();\n    // use start_time.toISOString() to convert to the required format\n    const start_time = new Date(date + \" \" + startTime);\n    const end_time = new Date(date + \" \" + endTime);\n    const start_str = `${\n      start_time.getUTCHours() < 10\n        ? \"0\" + start_time.getUTCHours()\n        : String(start_time.getUTCHours())\n    }:${\n      start_time.getUTCMinutes() < 10\n        ? \"0\" + start_time.getUTCMinutes()\n        : String(start_time.getUTCMinutes())\n    }`;\n    const end_str = `${\n      end_time.getUTCHours() < 10\n        ? \"0\" + end_time.getUTCHours()\n        : String(end_time.getUTCHours())\n    }:${\n      end_time.getUTCMinutes() < 10\n        ? \"0\" + end_time.getUTCMinutes()\n        : String(end_time.getUTCMinutes())\n    }`;\n    if (!interviewers.length) {\n      // console.log('Interviewer is empty');\n      openSnackbar({ message: \"Interviewer is empty\" });\n    } else if (!candidates.length) {\n      // console.log('Candidates is empty');\n      openSnackbar({ message: \"Candidates is empty\" });\n    } else if (end_time.getTime() <= start_time.getTime()) {\n      // console.log('Start time can not be later than end time. Make Snack bar.');\n      openSnackbar({ message: \"Interview can not start after it ends.\" });\n    } else {\n      const inter = interviewers.map((one) => {\n        return one.id;\n      });\n\n      const candid = candidates.map((one) => {\n        return one.id;\n      });\n\n      const details = {\n        id,\n        name,\n        description,\n        date,\n        start: start_str,\n        end: end_str,\n        interviewers: inter,\n        candidates: candid,\n      };\n      let result;\n\n      try {\n        result = await postModifyInterview(details);\n      } catch (error) {\n        console.log(error);\n      }\n      // console.log(result);\n      if (result.status === \"SUCCESS\") {\n        openSnackbar({ message: \"Successful, redirecting to Home...\" });\n        //redirect to home.\n        console.log(\"Now load home screen.\");\n        setTimeout(() => {\n          window.location = \"/\";\n        }, 1000);\n      } else {\n        // console.log('Overlap occured, so make snackbar and load the same form.');\n        openSnackbar({\n          message: \"Interview is overlapping with a previous interview.\",\n        });\n      }\n    }\n  }\n\n  async function onDelete() {\n    let result = await deleteInterview(id);\n    if (result.status === \"SUCCESS\") {\n      openSnackbar({ message: \"Deleted, redirecting to Home...\" });\n      //redirect to home.\n      console.log(\"Now load home screen.\");\n      setTimeout(() => {\n        window.location = \"/\";\n      }, 1000);\n    } else {\n      console.log(result);\n      // console.log('Overlap occured, so make snackbar and load the same form.');\n      openSnackbar({ message: \"There was some error while deleting\" });\n    }\n  }\n\n  return (\n    <Container>\n      <MuiThemeProvider>\n        <Notifier />\n        <form className={classes.input} onSubmit={formSubmit}>\n          {nameField}\n          {descriptionField}\n          {candidateField}\n          {interviewerField}\n          {dateField}\n          {startTimeField}\n          {endTimeField}\n          <br />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n            disabled={disable}\n            style={{ maxWidth: \"8rem\" }}\n          >\n            Submit\n          </Button>\n        </form>\n        <div className={classes.fabContainer}>\n          <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            aria-label=\"edit\"\n            onClick={() => setDisable(!disable)}\n          >\n            <EditIcon />\n          </Fab>\n          <Fab\n            className={classes.fab}\n            color=\"secondary\"\n            aria-label=\"edit\"\n            onClick={onDelete}\n          >\n            <DeleteIcon />\n          </Fab>\n        </div>\n      </MuiThemeProvider>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
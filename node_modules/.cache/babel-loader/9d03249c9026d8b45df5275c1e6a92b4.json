{"ast":null,"code":"import axios from 'axios';\nconst baseurl = 'https://fierce-hamlet-68811.herokuapp.com/api/v1';\nexport async function getInterviews() {\n  const url = baseurl + '/interviews';\n  const {\n    data\n  } = await axios.get(url).then(res => res.data); // console.log(data);\n\n  return data;\n}\nexport async function getInterview(interviewId) {\n  const url = baseurl + `/interviews/${interviewId}`;\n  const {\n    data\n  } = await axios.get(url).then(res => res.data); // console.log(data);\n\n  return data;\n}\nexport async function postNewInterview(interviewDetails) {\n  // console.log(interviewDetails);\n  const url = baseurl + `/interviews`;\n  const {\n    data\n  } = await axios.post(url, {\n    name: interviewDetails.name,\n    description: interviewDetails.description,\n    date: interviewDetails.date,\n    start_time: interviewDetails.start,\n    end_time: interviewDetails.end,\n    interviewers: interviewDetails.interviewers,\n    candidates: interviewDetails.candidates\n  }).then(res => res.data);\n  return data;\n}\nexport async function postModifyInterview(interviewDetails) {\n  // console.log(interviewDetails);\n  const url = baseurl + `/interviews/${interviewDetails.id}`;\n  const {\n    data\n  } = await axios.patch(url, {\n    name: interviewDetails.name,\n    description: interviewDetails.description,\n    date: interviewDetails.date,\n    start_time: interviewDetails.start,\n    end_time: interviewDetails.end,\n    interviewers: interviewDetails.interviewers,\n    candidates: interviewDetails.candidates\n  }).then(res => res.data);\n  return data;\n}\nexport async function getParticipants(details) {\n  const url = baseurl + `/participants/${details.query}/${details.role}`;\n  const {\n    data\n  } = await axios.get(url).then(res => res.data); // console.log(data);\n\n  return data;\n}","map":{"version":3,"sources":["/home/nisarg/Desktop/ror/testone/client/src/api/index.js"],"names":["axios","baseurl","getInterviews","url","data","get","then","res","getInterview","interviewId","postNewInterview","interviewDetails","post","name","description","date","start_time","start","end_time","end","interviewers","candidates","postModifyInterview","id","patch","getParticipants","details","query","role"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,kDAAhB;AAEA,OAAO,eAAeC,aAAf,GAA+B;AACrC,QAAMC,GAAG,GAAGF,OAAO,GAAG,aAAtB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACH,IAAjC,CAAvB,CAFqC,CAGrC;;AACA,SAAOA,IAAP;AACA;AAED,OAAO,eAAeI,YAAf,CAA4BC,WAA5B,EAAyC;AAC/C,QAAMN,GAAG,GAAGF,OAAO,GAAI,eAAcQ,WAAY,EAAjD;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACH,IAAjC,CAAvB,CAF+C,CAG/C;;AACA,SAAOA,IAAP;AACA;AACD,OAAO,eAAeM,gBAAf,CAAgCC,gBAAhC,EAAkD;AACxD;AACA,QAAMR,GAAG,GAAGF,OAAO,GAAI,aAAvB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAC1BY,IADqB,CAChBT,GADgB,EACX;AACVU,IAAAA,IAAI,EAAEF,gBAAgB,CAACE,IADb;AAEVC,IAAAA,WAAW,EAAEH,gBAAgB,CAACG,WAFpB;AAGVC,IAAAA,IAAI,EAAEJ,gBAAgB,CAACI,IAHb;AAIVC,IAAAA,UAAU,EAAEL,gBAAgB,CAACM,KAJnB;AAKVC,IAAAA,QAAQ,EAAEP,gBAAgB,CAACQ,GALjB;AAMVC,IAAAA,YAAY,EAAET,gBAAgB,CAACS,YANrB;AAOVC,IAAAA,UAAU,EAAEV,gBAAgB,CAACU;AAPnB,GADW,EAUrBf,IAVqB,CAUfC,GAAD,IAASA,GAAG,CAACH,IAVG,CAAvB;AAYA,SAAOA,IAAP;AACA;AACD,OAAO,eAAekB,mBAAf,CAAmCX,gBAAnC,EAAqD;AAC3D;AACA,QAAMR,GAAG,GAAGF,OAAO,GAAI,eAAcU,gBAAgB,CAACY,EAAG,EAAzD;AACA,QAAM;AAAEnB,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAC1BwB,KADqB,CACfrB,GADe,EACV;AACXU,IAAAA,IAAI,EAAEF,gBAAgB,CAACE,IADZ;AAEXC,IAAAA,WAAW,EAAEH,gBAAgB,CAACG,WAFnB;AAGXC,IAAAA,IAAI,EAAEJ,gBAAgB,CAACI,IAHZ;AAIXC,IAAAA,UAAU,EAAEL,gBAAgB,CAACM,KAJlB;AAKXC,IAAAA,QAAQ,EAAEP,gBAAgB,CAACQ,GALhB;AAMXC,IAAAA,YAAY,EAAET,gBAAgB,CAACS,YANpB;AAOXC,IAAAA,UAAU,EAAEV,gBAAgB,CAACU;AAPlB,GADU,EAUrBf,IAVqB,CAUfC,GAAD,IAASA,GAAG,CAACH,IAVG,CAAvB;AAYA,SAAOA,IAAP;AACA;AAED,OAAO,eAAeqB,eAAf,CAA+BC,OAA/B,EAAwC;AAC9C,QAAMvB,GAAG,GAAGF,OAAO,GAAI,iBAAgByB,OAAO,CAACC,KAAM,IAAGD,OAAO,CAACE,IAAK,EAArE;AACA,QAAM;AAAExB,IAAAA;AAAF,MAAW,MAAMJ,KAAK,CAACK,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACH,IAAjC,CAAvB,CAF8C,CAG9C;;AACA,SAAOA,IAAP;AACA","sourcesContent":["import axios from 'axios';\n\nconst baseurl = 'https://fierce-hamlet-68811.herokuapp.com/api/v1';\n\nexport async function getInterviews() {\n\tconst url = baseurl + '/interviews';\n\tconst { data } = await axios.get(url).then((res) => res.data);\n\t// console.log(data);\n\treturn data;\n}\n\nexport async function getInterview(interviewId) {\n\tconst url = baseurl + `/interviews/${interviewId}`;\n\tconst { data } = await axios.get(url).then((res) => res.data);\n\t// console.log(data);\n\treturn data;\n}\nexport async function postNewInterview(interviewDetails) {\n\t// console.log(interviewDetails);\n\tconst url = baseurl + `/interviews`;\n\tconst { data } = await axios\n\t\t.post(url, {\n\t\t\tname: interviewDetails.name,\n\t\t\tdescription: interviewDetails.description,\n\t\t\tdate: interviewDetails.date,\n\t\t\tstart_time: interviewDetails.start,\n\t\t\tend_time: interviewDetails.end,\n\t\t\tinterviewers: interviewDetails.interviewers,\n\t\t\tcandidates: interviewDetails.candidates\n\t\t})\n\t\t.then((res) => res.data);\n\n\treturn data;\n}\nexport async function postModifyInterview(interviewDetails) {\n\t// console.log(interviewDetails);\n\tconst url = baseurl + `/interviews/${interviewDetails.id}`;\n\tconst { data } = await axios\n\t\t.patch(url, {\n\t\t\tname: interviewDetails.name,\n\t\t\tdescription: interviewDetails.description,\n\t\t\tdate: interviewDetails.date,\n\t\t\tstart_time: interviewDetails.start,\n\t\t\tend_time: interviewDetails.end,\n\t\t\tinterviewers: interviewDetails.interviewers,\n\t\t\tcandidates: interviewDetails.candidates\n\t\t})\n\t\t.then((res) => res.data);\n\n\treturn data;\n}\n\nexport async function getParticipants(details) {\n\tconst url = baseurl + `/participants/${details.query}/${details.role}`;\n\tconst { data } = await axios.get(url).then((res) => res.data);\n\t// console.log(data);\n\treturn data;\n}\n"]},"metadata":{},"sourceType":"module"}
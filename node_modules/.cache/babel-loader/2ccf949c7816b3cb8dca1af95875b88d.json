{"ast":null,"code":"var _jsxFileName = \"/home/nisarg/Desktop/ror/testone/client/src/components/Interview.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getInterview, getParticipants, postModifyInterview, deleteInterview } from '../api';\nimport Notifier, { openSnackbar } from './Notifier';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, TextField, Button, Container, CircularProgress, Fab } from '@material-ui/core';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete'; // Basic styling\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'flex',\n    flexDirection: 'column',\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    marginTop: theme.spacing(3)\n  },\n  timeField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  textField: {\n    width: '100%'\n  },\n  fabContainer: {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed'\n  },\n  fab: {\n    margin: '0.3rem'\n  }\n}));\nexport default function Interview({\n  id\n}) {\n  const [interview, setInterview] = useState(null);\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [candOpt, setCandOpt] = useState([]);\n  const [candidates, setCandidates] = useState([]);\n  const [interOpt, setInterOpt] = useState([]);\n  const [interviewers, setInterviewers] = useState([]);\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [disable, setDisable] = useState(true);\n  useEffect(() => {\n    getInterview(id).then(interview => {\n      setInterview(interview);\n      setName(interview.name);\n      setDescription(interview.description);\n      setCandidates(interview.candidates);\n      setInterviewers(interview.interviewers);\n      setDate(interview.date); // format start and end times to utc for database.\n\n      let start = new Date(interview.start_time);\n      let end = new Date(interview.end_time);\n      start = start.toLocaleTimeString();\n      end = end.toLocaleTimeString();\n      if (start[1] === ':') start = '0' + start;\n      if (end[1] === ':') end = '0' + end;\n      setStartTime(start.slice(0, 5));\n      setEndTime(end.slice(0, 5));\n    });\n  }, [id]);\n  if (!interview) return /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }); // update candidates\n\n  async function updateCandOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setCandOpt(await getParticipants({\n      query: value.toLowerCase(),\n      role: 1\n    }));\n  } // update interviewers\n\n\n  async function updateInterOpts(event, value, reason) {\n    if (value.length !== 1) return;\n    setInterOpt(await getParticipants({\n      query: value.toLowerCase(),\n      role: 0\n    }));\n  } // Name of the interview.\n\n\n  const nameField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"name\",\n    label: \"Name\",\n    className: classes.textField,\n    onChange: event => setName(event.target.value),\n    value: name,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 3\n    }\n  }); // Description\n\n  const descriptionField = /*#__PURE__*/React.createElement(TextField, {\n    id: \"description\",\n    label: \"Description\",\n    className: classes.textField,\n    multiline: true,\n    rows: 4,\n    onChange: event => setDescription(event.target.value),\n    value: description,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }\n  }); // Candidates\n\n  const candidateField = /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    filterSelectedOptions: true,\n    id: \"candidates\",\n    size: \"small\",\n    options: candOpt,\n    getOptionLabel: option => option.name,\n    getOptionSelected: (option, value) => option.id === value.id,\n    onInputChange: updateCandOpts,\n    onChange: (evt, value) => setCandidates(value),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"standard\",\n      label: \"Select Candidates\",\n      placeholder: \"candidates\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }\n    })),\n    value: candidates,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }); // Interviewers\n\n  const interviewerField = /*#__PURE__*/React.createElement(Autocomplete, {\n    multiple: true,\n    filterSelectedOptions: true,\n    id: \"interviewer\",\n    size: \"small\",\n    options: interOpt,\n    getOptionLabel: option => option.name,\n    getOptionSelected: (option, value) => option.id === value.id,\n    onInputChange: updateInterOpts,\n    onChange: (evt, value) => setInterviewers(value),\n    renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n      variant: \"standard\",\n      label: \"Select Interviewers\",\n      placeholder: \"Interviewers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }\n    })),\n    value: interviewers,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }\n  }); // Date\n\n  const dateField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"date\",\n    label: \"Date\",\n    type: \"date\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setDate(event.target.value),\n    value: date,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 3\n    }\n  }); // Start time\n\n  const startTimeField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"start-time\",\n    label: \"Start Time\",\n    type: \"time\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setStartTime(event.target.value),\n    value: startTime,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 3\n    }\n  }); // End time\n\n  const endTimeField = /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    id: \"end-time\",\n    label: \"End Time\",\n    type: \"time\",\n    className: classes.timeField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: event => setEndTime(event.target.value),\n    value: endTime,\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 3\n    }\n  }); // Triggered on submit\n\n  async function formSubmit(event) {\n    event.preventDefault(); // use start_time.toISOString() to convert to the required format\n\n    const start_time = new Date(date + ' ' + startTime);\n    const end_time = new Date(date + ' ' + endTime); //Set time to utc for database purposes.\n\n    const start_str = `${start_time.getUTCHours() < 10 ? '0' + start_time.getUTCHours() : String(start_time.getUTCHours())}:${start_time.getUTCMinutes() < 10 ? '0' + start_time.getUTCMinutes() : String(start_time.getUTCMinutes())}`;\n    const end_str = `${end_time.getUTCHours() < 10 ? '0' + end_time.getUTCHours() : String(end_time.getUTCHours())}:${end_time.getUTCMinutes() < 10 ? '0' + end_time.getUTCMinutes() : String(end_time.getUTCMinutes())}`;\n\n    if (!interviewers.length) {\n      openSnackbar({\n        message: 'Interviewer is empty'\n      });\n    } else if (!candidates.length) {\n      openSnackbar({\n        message: 'Candidates is empty'\n      });\n    } else if (end_time.getTime() <= start_time.getTime()) {\n      openSnackbar({\n        message: 'Interview can not start after it ends.'\n      });\n    } else {\n      const inter = interviewers.map(one => {\n        return one.id;\n      });\n      const candid = candidates.map(one => {\n        return one.id;\n      });\n      const details = {\n        id,\n        name,\n        description,\n        date,\n        start: start_str,\n        end: end_str,\n        interviewers: inter,\n        candidates: candid\n      };\n      let result;\n\n      try {\n        result = await postModifyInterview(details);\n      } catch (error) {\n        console.log(error);\n        openSnackbar({\n          message: 'Error has occured.'\n        });\n      }\n\n      if (result.status === 'SUCCESS') {\n        openSnackbar({\n          message: 'Successful, redirecting to Home...'\n        }); //redirect to home.\n\n        setTimeout(() => {\n          window.location = '/';\n        }, 1000);\n      } else {\n        openSnackbar({\n          message: 'Interview is overlapping with a previous interview.'\n        });\n      }\n    }\n  }\n\n  async function onDelete() {\n    let result = await deleteInterview(id);\n\n    if (result.status === 'SUCCESS') {\n      openSnackbar({\n        message: 'Deleted, redirecting to Home...'\n      }); //redirect to home.\n\n      setTimeout(() => {\n        window.location = '/';\n      }, 1000);\n    } else {\n      openSnackbar({\n        message: 'There was some error while deleting'\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Notifier, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.input,\n    onSubmit: formSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, nameField, descriptionField, candidateField, interviewerField, dateField, startTimeField, endTimeField, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    disabled: disable,\n    style: {\n      maxWidth: '8rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 6\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fabContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    onClick: () => setDisable(!disable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.fab,\n    color: \"secondary\",\n    \"aria-label\": \"edit\",\n    onClick: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/nisarg/Desktop/ror/testone/client/src/components/Interview.js"],"names":["React","useState","useEffect","getInterview","getParticipants","postModifyInterview","deleteInterview","Notifier","openSnackbar","Autocomplete","makeStyles","TextField","Button","Container","CircularProgress","Fab","MuiThemeProvider","EditIcon","DeleteIcon","useStyles","theme","input","display","flexDirection","width","marginTop","spacing","timeField","marginLeft","marginRight","textField","fabContainer","margin","top","right","bottom","left","position","fab","Interview","id","interview","setInterview","classes","name","setName","description","setDescription","candOpt","setCandOpt","candidates","setCandidates","interOpt","setInterOpt","interviewers","setInterviewers","date","setDate","startTime","setStartTime","endTime","setEndTime","disable","setDisable","then","start","Date","start_time","end","end_time","toLocaleTimeString","slice","updateCandOpts","event","value","reason","length","query","toLowerCase","role","updateInterOpts","nameField","target","descriptionField","candidateField","option","evt","params","interviewerField","dateField","shrink","startTimeField","endTimeField","formSubmit","preventDefault","start_str","getUTCHours","String","getUTCMinutes","end_str","message","getTime","inter","map","one","candid","details","result","error","console","log","status","setTimeout","window","location","onDelete","maxWidth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,mBAAxC,EAA6DC,eAA7D,QAAoF,QAApF;AACA,OAAOC,QAAP,IAAmBC,YAAnB,QAAuC,YAAvC;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwCC,SAAxC,EAAmDC,gBAAnD,EAAqEC,GAArE,QAAgF,mBAAhF;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB,C,CAEA;;AACA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACxCC,EAAAA,KAAK,EAAE;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,aAAa,EAAE,QAFT;AAGNC,IAAAA,KAAK,EAAE,MAHD;AAIN,iBAAa;AACZC,MAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AADC,KAJP;AAOND,IAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd;AAPL,GADiC;AAUxCC,EAAAA,SAAS,EAAE;AACVC,IAAAA,UAAU,EAAER,KAAK,CAACM,OAAN,CAAc,CAAd,CADF;AAEVG,IAAAA,WAAW,EAAET,KAAK,CAACM,OAAN,CAAc,CAAd,CAFH;AAGVF,IAAAA,KAAK,EAAE;AAHG,GAV6B;AAexCM,EAAAA,SAAS,EAAE;AACVN,IAAAA,KAAK,EAAE;AADG,GAf6B;AAkBxCO,EAAAA,YAAY,EAAE;AACbC,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,GAAG,EAAE,MAFQ;AAGbC,IAAAA,KAAK,EAAE,EAHM;AAIbC,IAAAA,MAAM,EAAE,EAJK;AAKbC,IAAAA,IAAI,EAAE,MALO;AAMbC,IAAAA,QAAQ,EAAE;AANG,GAlB0B;AA0BxCC,EAAAA,GAAG,EAAE;AACJN,IAAAA,MAAM,EAAE;AADJ;AA1BmC,CAAZ,CAAD,CAA5B;AA+BA,eAAe,SAASO,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA2B;AACzC,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BzC,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM0C,OAAO,GAAGxB,SAAS,EAAzB;AACA,QAAM,CAAEyB,IAAF,EAAQC,OAAR,IAAoB5C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAE6C,WAAF,EAAeC,cAAf,IAAkC9C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAE+C,OAAF,EAAWC,UAAX,IAA0BhD,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAEiD,UAAF,EAAcC,aAAd,IAAgClD,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEmD,QAAF,EAAYC,WAAZ,IAA4BpD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEqD,YAAF,EAAgBC,eAAhB,IAAoCtD,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAEuD,IAAF,EAAQC,OAAR,IAAoBxD,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEyD,SAAF,EAAaC,YAAb,IAA8B1D,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAE2D,OAAF,EAAWC,UAAX,IAA0B5D,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAE6D,OAAF,EAAWC,UAAX,IAA0B9D,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CACR,MAAM;AACLC,IAAAA,YAAY,CAACqC,EAAD,CAAZ,CAAiBwB,IAAjB,CAAuBvB,SAAD,IAAe;AACpCC,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACAI,MAAAA,OAAO,CAACJ,SAAS,CAACG,IAAX,CAAP;AACAG,MAAAA,cAAc,CAACN,SAAS,CAACK,WAAX,CAAd;AACAK,MAAAA,aAAa,CAACV,SAAS,CAACS,UAAX,CAAb;AACAK,MAAAA,eAAe,CAACd,SAAS,CAACa,YAAX,CAAf;AACAG,MAAAA,OAAO,CAAChB,SAAS,CAACe,IAAX,CAAP,CANoC,CAQpC;;AACA,UAAIS,KAAK,GAAG,IAAIC,IAAJ,CAASzB,SAAS,CAAC0B,UAAnB,CAAZ;AACA,UAAIC,GAAG,GAAG,IAAIF,IAAJ,CAASzB,SAAS,CAAC4B,QAAnB,CAAV;AACAJ,MAAAA,KAAK,GAAGA,KAAK,CAACK,kBAAN,EAAR;AACAF,MAAAA,GAAG,GAAGA,GAAG,CAACE,kBAAJ,EAAN;AACA,UAAIL,KAAK,CAAC,CAAD,CAAL,KAAa,GAAjB,EAAsBA,KAAK,GAAG,MAAMA,KAAd;AACtB,UAAIG,GAAG,CAAC,CAAD,CAAH,KAAW,GAAf,EAAoBA,GAAG,GAAG,MAAMA,GAAZ;AACpBT,MAAAA,YAAY,CAACM,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAD,CAAZ;AACAV,MAAAA,UAAU,CAACO,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAa,CAAb,CAAD,CAAV;AACA,KAjBD;AAkBA,GApBO,EAqBR,CAAE/B,EAAF,CArBQ,CAAT;AAuBA,MAAI,CAACC,SAAL,EAAgB,oBAAO,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CArCyB,CAuCzC;;AACA,iBAAe+B,cAAf,CAA8BC,KAA9B,EAAqCC,KAArC,EAA4CC,MAA5C,EAAoD;AACnD,QAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACxB3B,IAAAA,UAAU,CAAC,MAAM7C,eAAe,CAAC;AAAEyE,MAAAA,KAAK,EAAEH,KAAK,CAACI,WAAN,EAAT;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAtB,CAAV;AACA,GA3CwC,CA6CzC;;;AACA,iBAAeC,eAAf,CAA+BP,KAA/B,EAAsCC,KAAtC,EAA6CC,MAA7C,EAAqD;AACpD,QAAID,KAAK,CAACE,MAAN,KAAiB,CAArB,EAAwB;AACxBvB,IAAAA,WAAW,CAAC,MAAMjD,eAAe,CAAC;AAAEyE,MAAAA,KAAK,EAAEH,KAAK,CAACI,WAAN,EAAT;AAA8BC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAtB,CAAX;AACA,GAjDwC,CAmDzC;;;AACA,QAAME,SAAS,gBACd,oBAAC,SAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,EAAE,EAAC,MAFJ;AAGC,IAAA,KAAK,EAAC,MAHP;AAIC,IAAA,SAAS,EAAEtC,OAAO,CAACb,SAJpB;AAKC,IAAA,QAAQ,EAAG2C,KAAD,IAAW5B,OAAO,CAAC4B,KAAK,CAACS,MAAN,CAAaR,KAAd,CAL7B;AAMC,IAAA,KAAK,EAAE9B,IANR;AAOC,IAAA,QAAQ,EAAEkB,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CApDyC,CAgEzC;;AACA,QAAMqB,gBAAgB,gBACrB,oBAAC,SAAD;AACC,IAAA,EAAE,EAAC,aADJ;AAEC,IAAA,KAAK,EAAC,aAFP;AAGC,IAAA,SAAS,EAAExC,OAAO,CAACb,SAHpB;AAIC,IAAA,SAAS,MAJV;AAKC,IAAA,IAAI,EAAE,CALP;AAMC,IAAA,QAAQ,EAAG2C,KAAD,IAAW1B,cAAc,CAAC0B,KAAK,CAACS,MAAN,CAAaR,KAAd,CANpC;AAOC,IAAA,KAAK,EAAE5B,WAPR;AAQC,IAAA,QAAQ,EAAEgB,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAjEyC,CA8EzC;;AACA,QAAMsB,cAAc,gBACnB,oBAAC,YAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,qBAAqB,MAFtB;AAGC,IAAA,EAAE,EAAC,YAHJ;AAIC,IAAA,IAAI,EAAC,OAJN;AAKC,IAAA,OAAO,EAAEpC,OALV;AAMC,IAAA,cAAc,EAAGqC,MAAD,IAAYA,MAAM,CAACzC,IANpC;AAOC,IAAA,iBAAiB,EAAE,CAACyC,MAAD,EAASX,KAAT,KAAmBW,MAAM,CAAC7C,EAAP,KAAckC,KAAK,CAAClC,EAP3D;AAQC,IAAA,aAAa,EAAEgC,cARhB;AASC,IAAA,QAAQ,EAAE,CAACc,GAAD,EAAMZ,KAAN,KAAgBvB,aAAa,CAACuB,KAAD,CATxC;AAUC,IAAA,WAAW,EAAGa,MAAD,iBACZ,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAC,mBAAhD;AAAoE,MAAA,WAAW,EAAC,YAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXF;AAaC,IAAA,KAAK,EAAErC,UAbR;AAcC,IAAA,QAAQ,EAAEY,OAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CA/EyC,CAkGzC;;AACA,QAAM0B,gBAAgB,gBACrB,oBAAC,YAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,qBAAqB,MAFtB;AAGC,IAAA,EAAE,EAAC,aAHJ;AAIC,IAAA,IAAI,EAAC,OAJN;AAKC,IAAA,OAAO,EAAEpC,QALV;AAMC,IAAA,cAAc,EAAGiC,MAAD,IAAYA,MAAM,CAACzC,IANpC;AAOC,IAAA,iBAAiB,EAAE,CAACyC,MAAD,EAASX,KAAT,KAAmBW,MAAM,CAAC7C,EAAP,KAAckC,KAAK,CAAClC,EAP3D;AAQC,IAAA,aAAa,EAAEwC,eARhB;AASC,IAAA,QAAQ,EAAE,CAACM,GAAD,EAAMZ,KAAN,KAAgBnB,eAAe,CAACmB,KAAD,CAT1C;AAUC,IAAA,WAAW,EAAGa,MAAD,iBACZ,oBAAC,SAAD,oBAAeA,MAAf;AAAuB,MAAA,OAAO,EAAC,UAA/B;AAA0C,MAAA,KAAK,EAAC,qBAAhD;AAAsE,MAAA,WAAW,EAAC,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAXF;AAaC,IAAA,KAAK,EAAEjC,YAbR;AAcC,IAAA,QAAQ,EAAEQ,OAdX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAnGyC,CAsHzC;;AACA,QAAM2B,SAAS,gBACd,oBAAC,SAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,EAAE,EAAC,MAFJ;AAGC,IAAA,KAAK,EAAC,MAHP;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,SAAS,EAAE9C,OAAO,CAAChB,SALpB;AAMC,IAAA,eAAe,EAAE;AAChB+D,MAAAA,MAAM,EAAE;AADQ,KANlB;AASC,IAAA,QAAQ,EAAGjB,KAAD,IAAWhB,OAAO,CAACgB,KAAK,CAACS,MAAN,CAAaR,KAAd,CAT7B;AAUC,IAAA,KAAK,EAAElB,IAVR;AAWC,IAAA,QAAQ,EAAEM,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAvHyC,CAuIzC;;AACA,QAAM6B,cAAc,gBACnB,oBAAC,SAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,EAAE,EAAC,YAFJ;AAGC,IAAA,KAAK,EAAC,YAHP;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,SAAS,EAAEhD,OAAO,CAAChB,SALpB;AAMC,IAAA,eAAe,EAAE;AAChB+D,MAAAA,MAAM,EAAE;AADQ,KANlB;AASC,IAAA,QAAQ,EAAGjB,KAAD,IAAWd,YAAY,CAACc,KAAK,CAACS,MAAN,CAAaR,KAAd,CATlC;AAUC,IAAA,KAAK,EAAEhB,SAVR;AAWC,IAAA,QAAQ,EAAEI,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAxIyC,CAwJzC;;AACA,QAAM8B,YAAY,gBACjB,oBAAC,SAAD;AACC,IAAA,QAAQ,MADT;AAEC,IAAA,EAAE,EAAC,UAFJ;AAGC,IAAA,KAAK,EAAC,UAHP;AAIC,IAAA,IAAI,EAAC,MAJN;AAKC,IAAA,SAAS,EAAEjD,OAAO,CAAChB,SALpB;AAMC,IAAA,eAAe,EAAE;AAChB+D,MAAAA,MAAM,EAAE;AADQ,KANlB;AASC,IAAA,QAAQ,EAAGjB,KAAD,IAAWZ,UAAU,CAACY,KAAK,CAACS,MAAN,CAAaR,KAAd,CAThC;AAUC,IAAA,KAAK,EAAEd,OAVR;AAWC,IAAA,QAAQ,EAAEE,OAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAzJyC,CAyKzC;;AACA,iBAAe+B,UAAf,CAA0BpB,KAA1B,EAAiC;AAChCA,IAAAA,KAAK,CAACqB,cAAN,GADgC,CAEhC;;AACA,UAAM3B,UAAU,GAAG,IAAID,IAAJ,CAASV,IAAI,GAAG,GAAP,GAAaE,SAAtB,CAAnB;AACA,UAAMW,QAAQ,GAAG,IAAIH,IAAJ,CAASV,IAAI,GAAG,GAAP,GAAaI,OAAtB,CAAjB,CAJgC,CAMhC;;AACA,UAAMmC,SAAS,GAAI,GAAE5B,UAAU,CAAC6B,WAAX,KAA2B,EAA3B,GAClB,MAAM7B,UAAU,CAAC6B,WAAX,EADY,GAElBC,MAAM,CAAC9B,UAAU,CAAC6B,WAAX,EAAD,CAA2B,IAAG7B,UAAU,CAAC+B,aAAX,KAA6B,EAA7B,GACpC,MAAM/B,UAAU,CAAC+B,aAAX,EAD8B,GAEpCD,MAAM,CAAC9B,UAAU,CAAC+B,aAAX,EAAD,CAA6B,EAJtC;AAKA,UAAMC,OAAO,GAAI,GAAE9B,QAAQ,CAAC2B,WAAT,KAAyB,EAAzB,GAChB,MAAM3B,QAAQ,CAAC2B,WAAT,EADU,GAEhBC,MAAM,CAAC5B,QAAQ,CAAC2B,WAAT,EAAD,CAAyB,IAAG3B,QAAQ,CAAC6B,aAAT,KAA2B,EAA3B,GAClC,MAAM7B,QAAQ,CAAC6B,aAAT,EAD4B,GAElCD,MAAM,CAAC5B,QAAQ,CAAC6B,aAAT,EAAD,CAA2B,EAJpC;;AAKA,QAAI,CAAC5C,YAAY,CAACsB,MAAlB,EAA0B;AACzBpE,MAAAA,YAAY,CAAC;AAAE4F,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACA,KAFD,MAEO,IAAI,CAAClD,UAAU,CAAC0B,MAAhB,EAAwB;AAC9BpE,MAAAA,YAAY,CAAC;AAAE4F,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACA,KAFM,MAEA,IAAI/B,QAAQ,CAACgC,OAAT,MAAsBlC,UAAU,CAACkC,OAAX,EAA1B,EAAgD;AACtD7F,MAAAA,YAAY,CAAC;AAAE4F,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACA,KAFM,MAEA;AACN,YAAME,KAAK,GAAGhD,YAAY,CAACiD,GAAb,CAAkBC,GAAD,IAAS;AACvC,eAAOA,GAAG,CAAChE,EAAX;AACA,OAFa,CAAd;AAIA,YAAMiE,MAAM,GAAGvD,UAAU,CAACqD,GAAX,CAAgBC,GAAD,IAAS;AACtC,eAAOA,GAAG,CAAChE,EAAX;AACA,OAFc,CAAf;AAIA,YAAMkE,OAAO,GAAG;AACflE,QAAAA,EADe;AAEfI,QAAAA,IAFe;AAGfE,QAAAA,WAHe;AAIfU,QAAAA,IAJe;AAKfS,QAAAA,KAAK,EAAE8B,SALQ;AAMf3B,QAAAA,GAAG,EAAE+B,OANU;AAOf7C,QAAAA,YAAY,EAAEgD,KAPC;AAQfpD,QAAAA,UAAU,EAAEuD;AARG,OAAhB;AAUA,UAAIE,MAAJ;;AAEA,UAAI;AACHA,QAAAA,MAAM,GAAG,MAAMtG,mBAAmB,CAACqG,OAAD,CAAlC;AACA,OAFD,CAEE,OAAOE,KAAP,EAAc;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACApG,QAAAA,YAAY,CAAC;AAAE4F,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAZ;AACA;;AAED,UAAIO,MAAM,CAACI,MAAP,KAAkB,SAAtB,EAAiC;AAChCvG,QAAAA,YAAY,CAAC;AAAE4F,UAAAA,OAAO,EAAE;AAAX,SAAD,CAAZ,CADgC,CAEhC;;AAEAY,QAAAA,UAAU,CAAC,MAAM;AAChBC,UAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACA,SAFS,EAEP,IAFO,CAAV;AAGA,OAPD,MAOO;AACN1G,QAAAA,YAAY,CAAC;AACZ4F,UAAAA,OAAO,EAAE;AADG,SAAD,CAAZ;AAGA;AACD;AACD;;AAED,iBAAee,QAAf,GAA0B;AACzB,QAAIR,MAAM,GAAG,MAAMrG,eAAe,CAACkC,EAAD,CAAlC;;AACA,QAAImE,MAAM,CAACI,MAAP,KAAkB,SAAtB,EAAiC;AAChCvG,MAAAA,YAAY,CAAC;AAAE4F,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ,CADgC,CAEhC;;AAEAY,MAAAA,UAAU,CAAC,MAAM;AAChBC,QAAAA,MAAM,CAACC,QAAP,GAAkB,GAAlB;AACA,OAFS,EAEP,IAFO,CAAV;AAGA,KAPD,MAOO;AACN1G,MAAAA,YAAY,CAAC;AAAE4F,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAZ;AACA;AACD;;AAED,sBACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAM,IAAA,SAAS,EAAEzD,OAAO,CAACtB,KAAzB;AAAgC,IAAA,QAAQ,EAAEwE,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEZ,SADF,EAEEE,gBAFF,EAGEC,cAHF,EAIEI,gBAJF,EAKEC,SALF,EAMEE,cANF,EAOEC,YAPF,eAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,eASC,oBAAC,MAAD;AACC,IAAA,OAAO,EAAC,WADT;AAEC,IAAA,KAAK,EAAC,SAFP;AAGC,IAAA,IAAI,EAAC,QAHN;AAIC,IAAA,QAAQ,EAAE9B,OAJX;AAKC,IAAA,KAAK,EAAE;AAAEsD,MAAAA,QAAQ,EAAE;AAAZ,KALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATD,CAFD,eAqBC;AAAK,IAAA,SAAS,EAAEzE,OAAO,CAACZ,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AACC,IAAA,SAAS,EAAEY,OAAO,CAACL,GADpB;AAEC,IAAA,KAAK,EAAC,WAFP;AAGC,kBAAW,MAHZ;AAIC,IAAA,OAAO,EAAE,MAAMyB,UAAU,CAAC,CAACD,OAAF,CAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,CADD,eASC,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACL,GAAxB;AAA6B,IAAA,KAAK,EAAC,WAAnC;AAA+C,kBAAW,MAA1D;AAAiE,IAAA,OAAO,EAAE6E,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CATD,CArBD,CADD,CADD;AAuCA","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getInterview, getParticipants, postModifyInterview, deleteInterview } from '../api';\nimport Notifier, { openSnackbar } from './Notifier';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, TextField, Button, Container, CircularProgress, Fab } from '@material-ui/core';\nimport { MuiThemeProvider } from 'material-ui/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// Basic styling\nconst useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t\t'& > * + *': {\n\t\t\tmarginTop: theme.spacing(2)\n\t\t},\n\t\tmarginTop: theme.spacing(3)\n\t},\n\ttimeField: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: 200\n\t},\n\ttextField: {\n\t\twidth: '100%'\n\t},\n\tfabContainer: {\n\t\tmargin: 0,\n\t\ttop: 'auto',\n\t\tright: 20,\n\t\tbottom: 20,\n\t\tleft: 'auto',\n\t\tposition: 'fixed'\n\t},\n\tfab: {\n\t\tmargin: '0.3rem'\n\t}\n}));\n\nexport default function Interview({ id }) {\n\tconst [ interview, setInterview ] = useState(null);\n\tconst classes = useStyles();\n\tconst [ name, setName ] = useState('');\n\tconst [ description, setDescription ] = useState('');\n\tconst [ candOpt, setCandOpt ] = useState([]);\n\tconst [ candidates, setCandidates ] = useState([]);\n\tconst [ interOpt, setInterOpt ] = useState([]);\n\tconst [ interviewers, setInterviewers ] = useState([]);\n\tconst [ date, setDate ] = useState('');\n\tconst [ startTime, setStartTime ] = useState('');\n\tconst [ endTime, setEndTime ] = useState('');\n\tconst [ disable, setDisable ] = useState(true);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tgetInterview(id).then((interview) => {\n\t\t\t\tsetInterview(interview);\n\t\t\t\tsetName(interview.name);\n\t\t\t\tsetDescription(interview.description);\n\t\t\t\tsetCandidates(interview.candidates);\n\t\t\t\tsetInterviewers(interview.interviewers);\n\t\t\t\tsetDate(interview.date);\n\n\t\t\t\t// format start and end times to utc for database.\n\t\t\t\tlet start = new Date(interview.start_time);\n\t\t\t\tlet end = new Date(interview.end_time);\n\t\t\t\tstart = start.toLocaleTimeString();\n\t\t\t\tend = end.toLocaleTimeString();\n\t\t\t\tif (start[1] === ':') start = '0' + start;\n\t\t\t\tif (end[1] === ':') end = '0' + end;\n\t\t\t\tsetStartTime(start.slice(0, 5));\n\t\t\t\tsetEndTime(end.slice(0, 5));\n\t\t\t});\n\t\t},\n\t\t[ id ]\n\t);\n\tif (!interview) return <CircularProgress />;\n\n\t// update candidates\n\tasync function updateCandOpts(event, value, reason) {\n\t\tif (value.length !== 1) return;\n\t\tsetCandOpt(await getParticipants({ query: value.toLowerCase(), role: 1 }));\n\t}\n\n\t// update interviewers\n\tasync function updateInterOpts(event, value, reason) {\n\t\tif (value.length !== 1) return;\n\t\tsetInterOpt(await getParticipants({ query: value.toLowerCase(), role: 0 }));\n\t}\n\n\t// Name of the interview.\n\tconst nameField = (\n\t\t<TextField\n\t\t\trequired\n\t\t\tid=\"name\"\n\t\t\tlabel=\"Name\"\n\t\t\tclassName={classes.textField}\n\t\t\tonChange={(event) => setName(event.target.value)}\n\t\t\tvalue={name}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Description\n\tconst descriptionField = (\n\t\t<TextField\n\t\t\tid=\"description\"\n\t\t\tlabel=\"Description\"\n\t\t\tclassName={classes.textField}\n\t\t\tmultiline\n\t\t\trows={4}\n\t\t\tonChange={(event) => setDescription(event.target.value)}\n\t\t\tvalue={description}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Candidates\n\tconst candidateField = (\n\t\t<Autocomplete\n\t\t\tmultiple\n\t\t\tfilterSelectedOptions\n\t\t\tid=\"candidates\"\n\t\t\tsize=\"small\"\n\t\t\toptions={candOpt}\n\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\tgetOptionSelected={(option, value) => option.id === value.id}\n\t\t\tonInputChange={updateCandOpts}\n\t\t\tonChange={(evt, value) => setCandidates(value)}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField {...params} variant=\"standard\" label=\"Select Candidates\" placeholder=\"candidates\" />\n\t\t\t)}\n\t\t\tvalue={candidates}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Interviewers\n\tconst interviewerField = (\n\t\t<Autocomplete\n\t\t\tmultiple\n\t\t\tfilterSelectedOptions\n\t\t\tid=\"interviewer\"\n\t\t\tsize=\"small\"\n\t\t\toptions={interOpt}\n\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\tgetOptionSelected={(option, value) => option.id === value.id}\n\t\t\tonInputChange={updateInterOpts}\n\t\t\tonChange={(evt, value) => setInterviewers(value)}\n\t\t\trenderInput={(params) => (\n\t\t\t\t<TextField {...params} variant=\"standard\" label=\"Select Interviewers\" placeholder=\"Interviewers\" />\n\t\t\t)}\n\t\t\tvalue={interviewers}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Date\n\tconst dateField = (\n\t\t<TextField\n\t\t\trequired\n\t\t\tid=\"date\"\n\t\t\tlabel=\"Date\"\n\t\t\ttype=\"date\"\n\t\t\tclassName={classes.timeField}\n\t\t\tInputLabelProps={{\n\t\t\t\tshrink: true\n\t\t\t}}\n\t\t\tonChange={(event) => setDate(event.target.value)}\n\t\t\tvalue={date}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Start time\n\tconst startTimeField = (\n\t\t<TextField\n\t\t\trequired\n\t\t\tid=\"start-time\"\n\t\t\tlabel=\"Start Time\"\n\t\t\ttype=\"time\"\n\t\t\tclassName={classes.timeField}\n\t\t\tInputLabelProps={{\n\t\t\t\tshrink: true\n\t\t\t}}\n\t\t\tonChange={(event) => setStartTime(event.target.value)}\n\t\t\tvalue={startTime}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// End time\n\tconst endTimeField = (\n\t\t<TextField\n\t\t\trequired\n\t\t\tid=\"end-time\"\n\t\t\tlabel=\"End Time\"\n\t\t\ttype=\"time\"\n\t\t\tclassName={classes.timeField}\n\t\t\tInputLabelProps={{\n\t\t\t\tshrink: true\n\t\t\t}}\n\t\t\tonChange={(event) => setEndTime(event.target.value)}\n\t\t\tvalue={endTime}\n\t\t\tdisabled={disable}\n\t\t/>\n\t);\n\n\t// Triggered on submit\n\tasync function formSubmit(event) {\n\t\tevent.preventDefault();\n\t\t// use start_time.toISOString() to convert to the required format\n\t\tconst start_time = new Date(date + ' ' + startTime);\n\t\tconst end_time = new Date(date + ' ' + endTime);\n\n\t\t//Set time to utc for database purposes.\n\t\tconst start_str = `${start_time.getUTCHours() < 10\n\t\t\t? '0' + start_time.getUTCHours()\n\t\t\t: String(start_time.getUTCHours())}:${start_time.getUTCMinutes() < 10\n\t\t\t? '0' + start_time.getUTCMinutes()\n\t\t\t: String(start_time.getUTCMinutes())}`;\n\t\tconst end_str = `${end_time.getUTCHours() < 10\n\t\t\t? '0' + end_time.getUTCHours()\n\t\t\t: String(end_time.getUTCHours())}:${end_time.getUTCMinutes() < 10\n\t\t\t? '0' + end_time.getUTCMinutes()\n\t\t\t: String(end_time.getUTCMinutes())}`;\n\t\tif (!interviewers.length) {\n\t\t\topenSnackbar({ message: 'Interviewer is empty' });\n\t\t} else if (!candidates.length) {\n\t\t\topenSnackbar({ message: 'Candidates is empty' });\n\t\t} else if (end_time.getTime() <= start_time.getTime()) {\n\t\t\topenSnackbar({ message: 'Interview can not start after it ends.' });\n\t\t} else {\n\t\t\tconst inter = interviewers.map((one) => {\n\t\t\t\treturn one.id;\n\t\t\t});\n\n\t\t\tconst candid = candidates.map((one) => {\n\t\t\t\treturn one.id;\n\t\t\t});\n\n\t\t\tconst details = {\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tdescription,\n\t\t\t\tdate,\n\t\t\t\tstart: start_str,\n\t\t\t\tend: end_str,\n\t\t\t\tinterviewers: inter,\n\t\t\t\tcandidates: candid\n\t\t\t};\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\tresult = await postModifyInterview(details);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\topenSnackbar({ message: 'Error has occured.' });\n\t\t\t}\n\n\t\t\tif (result.status === 'SUCCESS') {\n\t\t\t\topenSnackbar({ message: 'Successful, redirecting to Home...' });\n\t\t\t\t//redirect to home.\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\twindow.location = '/';\n\t\t\t\t}, 1000);\n\t\t\t} else {\n\t\t\t\topenSnackbar({\n\t\t\t\t\tmessage: 'Interview is overlapping with a previous interview.'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tasync function onDelete() {\n\t\tlet result = await deleteInterview(id);\n\t\tif (result.status === 'SUCCESS') {\n\t\t\topenSnackbar({ message: 'Deleted, redirecting to Home...' });\n\t\t\t//redirect to home.\n\n\t\t\tsetTimeout(() => {\n\t\t\t\twindow.location = '/';\n\t\t\t}, 1000);\n\t\t} else {\n\t\t\topenSnackbar({ message: 'There was some error while deleting' });\n\t\t}\n\t}\n\n\treturn (\n\t\t<Container>\n\t\t\t<MuiThemeProvider>\n\t\t\t\t<Notifier />\n\t\t\t\t<form className={classes.input} onSubmit={formSubmit}>\n\t\t\t\t\t{nameField}\n\t\t\t\t\t{descriptionField}\n\t\t\t\t\t{candidateField}\n\t\t\t\t\t{interviewerField}\n\t\t\t\t\t{dateField}\n\t\t\t\t\t{startTimeField}\n\t\t\t\t\t{endTimeField}\n\t\t\t\t\t<br />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={disable}\n\t\t\t\t\t\tstyle={{ maxWidth: '8rem' }}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t\t<div className={classes.fabContainer}>\n\t\t\t\t\t<Fab\n\t\t\t\t\t\tclassName={classes.fab}\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\taria-label=\"edit\"\n\t\t\t\t\t\tonClick={() => setDisable(!disable)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t\t<Fab className={classes.fab} color=\"secondary\" aria-label=\"edit\" onClick={onDelete}>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</Fab>\n\t\t\t\t</div>\n\t\t\t</MuiThemeProvider>\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}